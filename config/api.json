{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Grawk Movies",
    "contact": {
      "name": "grawk",
      "url": "https://github.com/grawk"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8003",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/movies": {
      "get": {
        "tags": [
          "Movie Operations"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "ID of movie to fetch",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "summary": "finds movies in the system",
        "responses": {
          "200": {
            "description": "movie response",
            "schema": {
              "$ref": "#/definitions/MovieList"
            },
            "headers": {
              "x-expires": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new movie",
        "operationId": "addMovie",
        "parameters": [
          {
            "name": "movie",
            "in": "body",
            "description": "Movie added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "movie response",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "description": "Returns a movie based on a single ID",
        "operationId": "find movie by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of movie to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "movie response",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Edits a movie",
        "operationId": "editMovie",
        "parameters": [
          {
            "name": "movie",
            "in": "body",
            "description": "Movie edit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "movie edit response",
            "schema": {
              "$ref": "#/definitions/Updated"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a single movie based on the ID supplied",
        "operationId": "deleteMovie",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of movie to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "movie deleted",
            "schema": {
              "$ref": "#/definitions/Updated"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/theaters": {
      "get": {
        "tags": [
          "Theaters nearby"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "lat/long location",
            "required": true,
            "type": "string"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "radius in feet around location",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "summary": "finds nearby theaters to a lat/long coordinate",
        "responses": {
          "200": {
            "description": "movie theater response",
            "schema": {
              "$ref": "#/definitions/TheaterList"
            },
            "headers": {
              "x-expires": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "MovieList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Movie"
          }
        }
      }
    },
    "TheaterList": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "radius": {
          "type": "integer",
          "format": "int64"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Theater"
          }
        }
      }

    },
    "Theater": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "gkey": {
          "type": "string"
        }
      }
    },
    "Movie": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewMovie"
        },
        {
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            }
          }
        }
      ]
    },
    "NewMovie": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "name",
        "message"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Updated": {
      "type": "object",
      "required": [
        "numberModified",
        "message"
      ],
      "properties": {
        "numberModified": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}